name: GCP IAM Role Automation

# Configure when the workflow runs
on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch
  workflow_dispatch: # Allow manual triggering from the GitHub Actions UI
    inputs:
      gcp_project_id:
        description: 'The GCP Project ID to assign roles in'
        required: true
        type: string
      target_type:
        description: 'Select the type of principal to assign roles to'
        required: true
        type: choice
        options:
          - 'service_account'
          - 'ad_group'
      gcp_service_account_email:
        description: 'Email of the GCP Service Account (required if Target Type is Service Account)'
        required: false # This is now optional in the UI, but script will validate based on target_type
        type: string
      ad_group_email:
        description: 'Email of the Active Directory Group (required if Target Type is AD Group)'
        required: false # This is now optional in the UI, but script will validate based on target_type
        type: string
      individual_roles: # Combined input for individual roles for either SA or AD Group
        description: 'Comma-separated individual IAM roles (e.g., roles/viewer,roles/storage.objectViewer)'
        required: false
        type: string
        default: ''
      bundled_role: # Combined input for bundled roles for either SA or AD Group
        description: 'Select a predefined bundled role (e.g., GenAI_ADMIN)'
        required: false
        type: choice
        options:
          - '' # Empty option for no bundled role
          - 'GenAI_ADMIN'
          - 'GenAI_DEVELOPER'
          - 'CUSTOM_BUNDLE_1' # Example: Add more as needed in the shell script
        default: ''

# Define environment variables that will be passed to the jobs.
env:
  # WIF_POOL_ID and WIF_EXECUTOR_SA_EMAIL are fixed secrets for authentication.
  WIF_POOL_ID: ${{ secrets.WIF_POOL_ID }}
  WIF_EXECUTOR_SA_EMAIL: ${{ secrets.WIF_EXECUTOR_SA_EMAIL }} # NEW SECRET REQUIRED

jobs:
  dry-run:
    name: Dry Run IAM Changes
    runs-on: ubuntu-latest
    environment:
      name: production # IMPORTANT: Replace with your actual GitHub Environment name
    permissions:
      contents: read
      id-token: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_POOL_ID }}
          # This is the dedicated SA for GitHub Actions to assume, which has permissions to modify IAM.
          service_account: ${{ env.WIF_EXECUTOR_SA_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ github.event.inputs.gcp_project_id }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Execute Dry Run Script
        id: dry_run_script
        run: |
          chmod +x ./assign_iam_roles.sh
          BASE_COMMAND="./assign_iam_roles.sh \
            --mode dry-run \
            --project-id \"${{ github.event.inputs.gcp_project_id }}\" \
            --target-type \"${{ github.event.inputs.target_type }}\""

          # Conditionally add service account or AD group email
          if [[ "${{ github.event.inputs.target_type }}" == "service_account" ]]; then
            BASE_COMMAND+=" --service-account-email \"${{ github.event.inputs.gcp_service_account_email }}\" \
                            --roles-sa \"${{ github.event.inputs.individual_roles }}\" \
                            --bundled-roles-sa \"${{ github.event.inputs.bundled_role }}\""
          elif [[ "${{ github.event.inputs.target_type }}" == "ad_group" ]]; then
            BASE_COMMAND+=" --ad-group-email \"${{ github.event.inputs.ad_group_email }}\" \
                            --roles-ad \"${{ github.event.inputs.individual_roles }}\" \
                            --bundled-roles-ad \"${{ github.event.inputs.bundled_role }}\""
          fi

          eval "$BASE_COMMAND" > dry_run_output.txt 2>&1

      - name: Upload Dry Run Output as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dry-run-iam-policy-changes
          path: dry_run_output.txt
          retention-days: 5

  apply:
    name: Apply IAM Changes
    runs-on: ubuntu-latest
    needs: dry-run
    environment:
      name: production # IMPORTANT: Replace with your actual GitHub Environment name
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_POOL_ID }}
          service_account: ${{ env.WIF_EXECUTOR_SA_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ github.event.inputs.gcp_project_id }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Execute Apply Script
        run: |
          chmod +x ./assign_iam_roles.sh
          BASE_COMMAND="./assign_iam_roles.sh \
            --mode apply \
            --project-id \"${{ github.event.inputs.gcp_project_id }}\" \
            --target-type \"${{ github.event.inputs.target_type }}\""

          # Conditionally add service account or AD group email
          if [[ "${{ github.event.inputs.target_type }}" == "service_account" ]]; then
            BASE_COMMAND+=" --service-account-email \"${{ github.event.inputs.gcp_service_account_email }}\" \
                            --roles-sa \"${{ github.event.inputs.individual_roles }}\" \
                            --bundled-roles-sa \"${{ github.event.inputs.bundled_role }}\""
          elif [[ "${{ github.event.inputs.target_type }}" == "ad_group" ]]; then
            BASE_COMMAND+=" --ad-group-email \"${{ github.event.inputs.ad_group_email }}\" \
                            --roles-ad \"${{ github.event.inputs.individual_roles }}\" \
                            --bundled-roles-ad \"${{ github.event.inputs.bundled_role }}\""
          fi

          eval "$BASE_COMMAND"
